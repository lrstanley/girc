name: test

on:
  push: {}
  pull_request: { branches: [master] }

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - id: goversion
        run: |
          echo ::set-output name=version::$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | sed -rn 's/.*"version": "([0-9]\.[0-9]+(\.[0-9]+)?)".*/\1/p' | head -1)
      - uses: actions/setup-go@v2
        with: { go-version: "${{ steps.goversion.outputs.version }}" }
      - uses: actions/checkout@v3
      - run: |
          go install golang.org/x/lint/golint@latest
      - run: $(go env GOPATH)/bin/golint -min_confidence 0.9 -set_exit_status
      - run: |
          GORACE="exitcode=1 halt_on_error=1" go test -v -coverprofile=coverage.txt -race -timeout 3m -count 3 -cpu 1,4
          bash <(curl -s https://codecov.io/bash)
      - run: go vet -v .
